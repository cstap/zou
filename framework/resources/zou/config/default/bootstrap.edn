{:zou/constructor zou.framework.bootstrap.impl/new-bootstrap-system

 :auto-load
 {:zou/constructor   zou.framework.core.auto-loader/map->AutoLoader
  :zou/tags          [:tag.core-extension]
  :prefixes          []
  :exclude-classpath "test"}

 :logging
 {:zou/constructor zou.framework.core.logging/map->LoggingConfigurator
  :zou/tags        [:tag.core-extension]
  :bridge-out?     #zou/cond {:dev  true
                              :else false}
  ;; Whether to install a pretty printer for exceptions.
  ;; Note that once the printer is installed, you cannot uninstall it during the session.
  :pretty?         true
  :level           #zou/if-prod [:info :debug]
  :console         "%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%5p) [%15.15t] %cyan(%-30.30logger{29}) : %m%n"
  :overrides       {"org.quartz.simpl.RAMJobStore"           :warn
                    "org.quartz.impl.DirectSchedulerFactory" :warn
                    "org.quartz.core.SchedulerSignalerImpl"  :warn
                    "org.xnio"                               :warn
                    "com.zaxxer.hikari"                      :info}}

 :extension-loader
 {:zou/constructor  zou.framework.core.ext-loader/map->ExtensionLoader
  :zou/dependencies {:logging :logging} ; should load after logging setup
  :zou/tags         [:tag.core-extension]}

 :entrypoint
 {:zou/constructor  zou.framework.entrypoint.impl/map->DefaultEntryPoint
  :zou/dependencies {:container :container}
  :exit-process?    #zou/cond {:prod true
                               :else false}}

 :container
 {:zou/constructor  zou.framework.container.impl/new-stateful-container
  :zou/dependencies {:core-extensions :tag.core-extension}
  :spec             {}}}
